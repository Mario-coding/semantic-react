{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","React","useState","visible","setVisible","Grid","columns","Column","Sidebar","Pushable","as","Segment","Menu","animation","icon","inverted","onHide","vertical","width","Item","Icon","name","Pusher","dimmed","basic","Header","Image","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQA0DeA,EA3CH,WAAO,IAAD,EACcC,IAAMC,UAAS,GAD7B,mBACTC,EADS,KACAC,EADA,KAGhB,OACE,cAACC,EAAA,EAAD,CAAMC,QAAS,EAAf,SACE,cAACD,EAAA,EAAKE,OAAN,UACE,eAACC,EAAA,EAAQC,SAAT,CAAkBC,GAAIC,IAAtB,UACE,eAACH,EAAA,EAAD,CACEE,GAAIE,IACJC,UAAU,UACVC,KAAK,UACLC,UAAQ,EACRC,OAAQ,kBAAMZ,GAAW,IACzBa,UAAQ,EACRd,QAASA,EACTe,MAAM,OARR,UAUE,eAACN,EAAA,EAAKO,KAAN,CAAWT,GAAG,IAAd,UACE,cAACU,EAAA,EAAD,CAAMC,KAAK,SADb,UAIA,eAACT,EAAA,EAAKO,KAAN,CAAWT,GAAG,IAAd,UACE,cAACU,EAAA,EAAD,CAAMC,KAAK,YADb,WAIA,eAACT,EAAA,EAAKO,KAAN,CAAWT,GAAG,IAAd,UACE,cAACU,EAAA,EAAD,CAAMC,KAAK,WADb,iBAMF,cAACb,EAAA,EAAQc,OAAT,CAAgBC,OAAQpB,EAAxB,SACE,eAACQ,EAAA,EAAD,CAASa,OAAK,EAAd,UACE,cAACC,EAAA,EAAD,CAAQf,GAAG,KAAX,iCACA,cAACgB,EAAA,EAAD,CAAOC,IAAI,iDCnCVC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2119add0.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {\n  Checkbox,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Menu,\n  Segment,\n  Sidebar,\n  Container,\n  Dropdown,\n} from 'semantic-ui-react'\n\nconst App = () => {\n  const [visible, setVisible] = React.useState(false)\n\n  return (\n    <Grid columns={1}>\n      <Grid.Column>\n        <Sidebar.Pushable as={Segment}>\n          <Sidebar\n            as={Menu}\n            animation='overlay'\n            icon='labeled'\n            inverted\n            onHide={() => setVisible(false)}\n            vertical\n            visible={visible}\n            width='thin'\n          >\n            <Menu.Item as='a'>\n              <Icon name='home' />\n              Home\n            </Menu.Item>\n            <Menu.Item as='a'>\n              <Icon name='gamepad' />\n              Games\n            </Menu.Item>\n            <Menu.Item as='a'>\n              <Icon name='camera' />\n              Channels\n            </Menu.Item>\n          </Sidebar>\n\n          <Sidebar.Pusher dimmed={visible}>\n            <Segment basic>\n              <Header as='h3'>Application Content</Header>\n              <Image src='/images/wireframe/paragraph.png' />\n            </Segment>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}